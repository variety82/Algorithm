def solution(priorities, location):
    for idx, value in enumerate(priorities):
        priorities[idx] = (idx, value)

    cnt = 1
    flag = True

    while flag:
        if max(priorities, key = lambda x:x[1])[1] == priorities[0][1]:
            if location == priorities[0][0]:
                return cnt
                break
            priorities.pop(0)
            cnt += 1
        else:
            tmp = priorities.pop(0)
            priorities.append(tmp)
            
            
'''
😥이전 작성 코드....
enumerate를 통해 최초의 idx까지 기록은 좋았으나 쌍으로 묶인 값중에 max를 뽑는 과정이 생각이 안나서 처음 value를 가지고만 max를 계속 추출해가면서
max를 변경함... 첫번째 조건문의 flag = False를 기록하고 51번째 line이 없으면 for문이 마지막이 아닌경우 다시 for문을 돌아서 추가함...
효율적이지 않은 코드같다 ㅜㅜ
'''
import copy

max_arr = copy.deepcopy(prioritiest)
max_value = max(max_arr)
for idx, value in enumerate(prioritiest):
    prioritiest[idx] = (idx, value)

cnt = 1
flag = True

while flag:
    for (idx, value) in prioritiest:
        if idx == location and value == max_value:
            print(cnt)
            flag = False
        
        elif value != max_value:
            tmp = prioritiest.pop(0)
            prioritiest.append(tmp)
            break
        else:
            prioritiest.pop(0)
            cnt += 1
            max_arr.remove(max_value)
            max_value = max(max_arr)
            break
        if flag == False:
            break
